{"version":3,"file":"static/js/186.21004827.chunk.js","mappings":"wNA6DA,UAxDgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAwB1B,OAtBAI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUC,EAAAA,EAAAA,IAAU,sCAADC,OACQnB,EAAO,YAC7C,CACEoB,QAAS,CACPC,cAAc,UAADF,OAAYG,mPACzBC,OAAQ,sBAGZ,KAAD,EARKT,EAAQC,EAAAS,KAUdjB,EAAWO,EAASW,KAAKC,SAASX,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAElCa,QAAQC,MAAM,2BAA0Bd,EAAAY,IAAS,yBAAAZ,EAAAe,OAAA,GAAAjB,EAAA,kBAExD,kBAhBiB,OAAAH,EAAAqB,MAAA,KAAAC,UAAA,KAkBlBvB,GACJ,GAAG,CAACT,IAEmB,IAAnBM,EAAQ2B,QACAC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,0CAIfC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aAEJD,EAAAA,EAAAA,KAAA,MAAAC,SACG7B,EAAQ+B,KAAI,SAAAC,GAAG,OACdF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,WAASG,EAAIC,WACjBL,EAAAA,EAAAA,KAAA,KAAAC,SAAIG,EAAIE,YAFDF,EAAIG,GAGR,QAKjB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { PropTypes } from 'prop-types';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    \n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                const response = await axios.get(\n                  `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n                  {\n                    headers: {\n                      Authorization: `Bearer ${process.env.REACT_APP_BEARER_TOKEN}`,\n                      Accept: 'application/json',\n                    },\n                  }\n                );\n\n                setReviews(response.data.results);\n            } catch (error) {\n                console.error('Error fetching reviews: ', error);\n            }\n        };\n\n        fetchReviews();\n    }, [movieId]);\n\n    if (reviews.length === 0) {\n        return (<div>No reviews available for this movie.</div>);\n    }\n\n    return (\n      <div>\n        <h1>Reviews</h1>\n\n        <ul>\n          {reviews.map(rev => (\n            <li key={rev.id}>\n              <h3>Author: {rev.author}</h3>\n              <p>{rev.content}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      is: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","headers","Authorization","process","Accept","sent","data","results","t0","console","error","stop","apply","arguments","length","_jsx","children","_jsxs","map","rev","author","content","id"],"sourceRoot":""}