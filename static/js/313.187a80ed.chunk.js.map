{"version":3,"file":"static/js/313.187a80ed.chunk.js","mappings":"2QAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BAIzBC,EAAKJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8B,SCoG3B,EArGe,WACX,IAAAG,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAO,OAExBC,EAAAA,EAAAA,YAAU,WAAO,IAADC,EAAAC,EACM,QAAdD,EAAAL,EAASO,aAAK,IAAAF,GAAdA,EAAgBP,eAA+B,QAAlBQ,EAAIN,EAASO,aAAK,IAAAD,GAAdA,EAAgBZ,cACjDc,QAAQC,IAAI,mBAAoBT,EAASO,OACzCR,EAAiBC,EAASO,MAAMT,eAChCH,EAAeK,EAASO,MAAMb,aAEtC,GAAG,CAACM,EAASO,SAGbH,EAAAA,EAAAA,YAAU,WACFF,EAASQ,SACTR,EAASQ,QAAQC,OAEzB,GAAG,IAEH,IAAMC,EAAwB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAK,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjB,OAAvBJ,EAAMK,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEIE,EAAAA,EAAAA,IACnB,4CACA,CACAC,OAAQ,CACJC,MAAO/B,EACPgC,eAAe,EACfC,SAAU,QACVC,KAAM,GAEVC,QAAS,CACLC,cAAc,UAADC,OAAYC,CAAAA,SAAAA,aAAAA,WAAAA,2BAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,wBACrCC,OAAQ,sBAGlB,KAAD,EAdShB,EAAQC,EAAAgB,KAgBdpC,EAAiBmB,EAASkB,KAAKC,SAK/BlB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAmB,GAAAnB,EAAA,SAEAX,QAAQC,IAAI,0BAAyBU,EAAAmB,IACrCvC,EAAiB,IAAI,yBAAAoB,EAAAoB,OAAA,GAAAvB,EAAA,kBAE5B,gBA7B6BwB,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,KAmC9B,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAAUjC,EAAyBgC,SAAA,EACrCE,EAAAA,EAAAA,KAAA,SACAC,IAAK7C,EACL8C,KAAK,OACLC,MAAOvD,EACPwD,YAAY,GACZC,SAZwB,SAAClC,GAC7BtB,EAAesB,EAAMmC,OAAOH,MAChC,KAYMH,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQJ,SAAC,eAExBE,EAAAA,EAAAA,KAAA,MAAAF,SACK9C,EAAcuD,KAAI,SAAAC,GAAK,OACpBR,EAAAA,EAAAA,KAAC1D,EAAE,CAAAwD,UACCE,EAAAA,EAAAA,KAAC/D,EAAU,CAACwE,GAAE,WAAAxB,OAAauB,EAAME,IAC7BjD,MAAO,CAAEkD,KAAM,UAAW3D,cAAAA,EAAeJ,YAAAA,GAAckD,SACtDU,EAAMI,OAASJ,EAAMK,QAHrBL,EAAME,GAKV,QAMrB,C","sources":["components/Movies/Movies.styled.js","components/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  color: #0080ff;\n`;\n\nexport const Li = styled.li`\n  margin-top: 7px;\n`;\n","import axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { PropTypes } from 'prop-types';\nimport { StyledLink, Li } from './Movies.styled';\n\nconst Movies = () => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const location = useLocation();\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        if (location.state?.searchResults && location.state?.searchQuery) {\n            console.log('Restoring state:', location.state);\n            setSearchResults(location.state.searchResults);\n            setSearchQuery(location.state.searchQuery);\n        }\n    }, [location.state]);\n\n    // input active from the start\n    useEffect(() => {\n        if (inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, []);\n\n    const handleSearchFilterSubmit = async event => {\n        event.preventDefault();\n        try {\n            const response = await axios.get(\n                'https://api.themoviedb.org/3/search/movie',\n                {\n                params: {\n                    query: searchQuery,\n                    include_adult: false,\n                    language: 'en-US',\n                    page: 1,\n                },\n                headers: {\n                    Authorization: `Bearer ${process.env.REACT_APP_BEARER_TOKEN}`,\n                    Accept: 'application/json',\n                },\n                }\n        );\n\n            setSearchResults(response.data.results);\n            // if (inputRef.current) {\n            //     // resets the input value directly in DOM without changing the state of the searchQuery\n            //     inputRef.current.value = '';\n            //     // setSearchQuery('');\n            // }\n        } catch (error) {\n            console.log('Error fetching movies: ', error);\n            setSearchResults([]);\n        }\n    };\n\n    const handleSearchValueChange = (event) => {\n        setSearchQuery(event.target.value);\n    };\n\n    return (\n      <div>\n        <form onSubmit={handleSearchFilterSubmit}>\n            <input\n            ref={inputRef}\n            type=\"text\"\n            value={searchQuery}\n            placeholder=\"\"\n            onChange={handleSearchValueChange}\n          ></input>\n          <button type=\"submit\">Search</button>\n        </form>\n        <ul>\n            {searchResults.map(movie => (\n                <Li key={movie.id}>\n                    <StyledLink to={`/movies/${movie.id}`}\n                        state={{ from: \"/movies\", searchResults, searchQuery }}>\n                        {movie.title || movie.name}\n                    </StyledLink>\n                </Li>\n            ))\n            }  \n        </ul>\n      </div>\n    );\n};\n\nMovies.propTypes = {\n    searchQuery: PropTypes.string,\n    searchResults: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n            name: PropTypes.string\n        })\n    ),\n    location: PropTypes.shape({\n        state: PropTypes.shape({\n            from: PropTypes.string,\n            searchResults: PropTypes.array,\n            searchQuery: PropTypes.string\n      })\n  }),\n}\n\nexport default Movies;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","Li","_templateObject2","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","location","useLocation","inputRef","useRef","useEffect","_location$state","_location$state2","state","console","log","current","focus","handleSearchFilterSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","event","response","_context","prev","next","preventDefault","axios","params","query","include_adult","language","page","headers","Authorization","concat","process","REACT_APP_BEARER_TOKEN","Accept","sent","data","results","t0","stop","_x","apply","arguments","_jsxs","children","onSubmit","_jsx","ref","type","value","placeholder","onChange","target","map","movie","to","id","from","title","name"],"sourceRoot":""}