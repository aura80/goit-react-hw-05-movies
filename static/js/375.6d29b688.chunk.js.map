{"version":3,"file":"static/js/375.6d29b688.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const PosterPath = styled.img`\n    width: 200px;\n    height: auto;\n    margin: 10px 5px;\n`;\n\nexport const DetailsDiv = styled.div`\n  display: flex;\n  column-gap: 20px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Side = styled.div`\n  display: block;\n`;\n\nexport const Line = styled.ul`\n  border-bottom: 1px solid black;\n`;\n\nexport const StyledBackLink = styled(Link)`\n  margin-left: 5px;\n  text-decoration: none;\n  color: #0080ff;;\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: #0080ff;\n`;","import { useState, useEffect } from \"react\";\nimport { Outlet, useParams, useLocation } from \"react-router-dom\";\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport {\n  PosterPath,\n  DetailsDiv,\n  Side,\n  StyledBackLink,\n  Line,\n  LinkStyle,\n} from './MovieDetails.styled.js';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(false);\n  const location = useLocation();\n  const backToHome = location.state?.from ?? '/';\n  // it keeps and restore the results when we go back to the search page\n  const searchResults = location.state?.searchResults ?? [];\n  // it keeps and restore the search term when we go back to the search page\n  const searchQuery = location.state?.searchQuery ?? '';\n  console.log('Navigation state:', {\n    backToHome,\n    searchResults,\n    searchQuery,\n  });\n\n  useEffect(() => {\n    console.log(`Fetching details for movie ID: ${movieId}`);\n    const fetchDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n          {\n            headers: {\n              Authorization: `Bearer ${process.env.REACT_APP_BEARER_TOKEN}`,\n              Accept: 'application/json',\n            },\n          }\n        );\n\n          setMovie(response.data);\n          // resets the error state if the movie is found\n          setError(error);\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          console.log('Error 404, movie not found or invalid API key: ', error);\n        } else {\n            console.error('Error fetching details: ', error);\n            // sets the error state to true\n            setError(true);\n        }\n      }\n    };\n\n    fetchDetails();\n  }, [movieId, error]);\n\n  if (movie && Object.keys(movie)?.length === 0) {\n    return (\n      <div>\n        Sorry, this movie is not available\n        <StyledBackLink to={backToHome}>Go back</StyledBackLink>\n      </div>\n    );\n  }\n\n  if (!movie) {\n      return (\n        <div>\n          <StyledBackLink to={backToHome}>Go back</StyledBackLink>\n              <p>Loading...</p>\n              <p>This movie could not exist</p>\n        </div>\n      );\n  }\n\n  return (\n    <>\n      <StyledBackLink to={backToHome} state={{ searchResults, searchQuery }}>\n        Go back\n      </StyledBackLink>\n      <DetailsDiv>\n        <PosterPath\n          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <Side>\n          <h1>{movie.title}</h1>\n          <p>User score: {movie.vote_average * 10}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p> {movie.genres.map(genre => genre.name).join(' ')}</p>\n        </Side>\n      </DetailsDiv>\n      <>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <LinkStyle\n              to=\"cast\"\n              state={{ from: backToHome, searchResults, searchQuery }}\n            >\n              Cast\n            </LinkStyle>\n          </li>\n          <li>\n            <LinkStyle\n              to=\"reviews\"\n              state={{ from: backToHome, searchResults, searchQuery }}\n            >\n              Reviews\n            </LinkStyle>\n          </li>\n        </ul>\n        <Line />\n      </>\n\n      <Outlet />\n    </>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string\n      })\n    ),\n  }),\n    location: PropTypes.shape({\n        state: PropTypes.shape({\n            from: PropTypes.string,\n            searchResults: PropTypes.array,\n            searchQuery: PropTypes.string\n      })\n  }),\n};\n\nexport default MovieDetails;"],"names":["PosterPath","styled","_templateObject","_taggedTemplateLiteral","DetailsDiv","_templateObject2","Side","_templateObject3","Line","_templateObject4","StyledBackLink","Link","_templateObject5","LinkStyle","_templateObject6","_location$state$from","_location$state","_location$state$searc","_location$state2","_location$state$searc2","_location$state3","_Object$keys","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","location","useLocation","backToHome","state","from","searchResults","searchQuery","console","log","useEffect","concat","fetchDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","headers","Authorization","process","REACT_APP_BEARER_TOKEN","Accept","sent","data","t0","status","stop","apply","arguments","Object","keys","length","_jsxs","children","_jsx","to","_Fragment","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","Outlet"],"sourceRoot":""}